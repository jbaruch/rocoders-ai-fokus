We are building the Vibecoding RGBW Control App.

🧠 Context:
This project is a live demo web app that uses webcam input to extract dominant colors and control a Shelly Duo GU10 RGBW bulb over the local network via HTTP.

📄 Instructions:
Follow `.github/copilot-instructions.md`. Do not repeat or reinterpret the requirements—use the guidelines as the single source of truth.

🧪 Use Context7 MCP for all code involving Java, Spring Boot, HTML/DOM APIs.

---

✅ Let’s begin step by step:

1. Think out loud: describe the responsibilities of the backend.
2. Outline the structure of the backend (main class, controller).
3. Implement the `POST /color` endpoint using Spring Boot 3.5 and Java 21.
4. Use `RestClient` to send the appropriate query parameters to the bulb.
6. Once backend is complete, move to frontend HTML/JS.

⚠️ Constraints:
- No mDNS, no WebSockets, no databases, no Docker.
- IP is entered manually via the UI.
- Frontend is HTML + JS, optionally `htm/preact` or `lit-html` from CDN only.
- The whole app runs locally for demo purposes.

---